datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                  Int       @id @default(autoincrement())
  name                String?
  email               String    @unique
  image               String?
  emailVerified       DateTime?
  studentId           String?
  department          String?
  
  preferredContactMode String?   // "email", "whatsapp", "messenger"
  contactInfo         String?   // Number or ID for whatsapp or messenger, nullable
  bio                 String?   // User bio

  accounts            Account[]
  sessions            Session[]
  Room                Room[]
}


model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
model Room {
  id            Int       @id @default(autoincrement())
  title         String
  location      String
  price         Int
  walkTime      Int
  availableFrom DateTime?
  roomType      String?
  department    String?
  photos        Json?     // store array of URLs as JSON
  features      Json?      // Store features as JSON
  mapLink       String?
  description    String?


  userId Int
  user   User @relation(fields: [userId], references: [id])
}

